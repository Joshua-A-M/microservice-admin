version: "3.9"

services:
  elasticsearch:
    image: bitnami/elasticsearch:8.13.0
    container_name: elasticsearch
    environment:
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
      - discovery.type=single-node
    volumes:
      - esdata:/bitnami/elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk

  kibana:
    image: bitnami/kibana:8.13.0
    container_name: kibana
    environment:
      - KIBANA_ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - KIBANA_USERNAME=elastic
      - KIBANA_PASSWORD=changeme
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  logstash:
    image: bitnami/logstash:8.13.0
    container_name: logstash
    volumes:
      # Logstash pipeline config
      - C:/Users/Joshu/DevDirectory/JavaEnv/Microservices/ChatService/admin/config:/opt/bitnami/logstash/pipeline
      # Spring Boot JSON logs
      - C:/Users/Joshu/DevDirectory/JavaEnv/Microservices/ChatService/admin/logs:/opt/bitnami/logstash/logs
    ports:
      - "5044:5044" # TCP input for Logstash
    networks:
      - elk
    depends_on:
      - elasticsearch

  zipkin:
    image: bitnami/zipkin:latest
    container_name: zipkin
    depends_on:
      - elasticsearch
    environment:
      - STORAGE_TYPE=elasticsearch
      - "ES_HOSTS=elasticsearch:9200"
    ports:
      - "9411:9411"
    networks:
      - elk
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - elk

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - elk

volumes:
  esdata:
  kafka-data:

networks:
  elk:

